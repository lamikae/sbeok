#!/usr/bin/env bash
: '
Checks whether the audio data length of a wav file is an exact
multiple of audio cd sector length in case of sector boundary errors (SBE).

A single audio sector is 2352 bytes.
(16 bits * 44100 1/sec * 2 channels * 1/75 sec * 1/8 bytes/bit).
The check is done by calculating the remainder of "data_bytes mod 2352".

To get the audio data bytes, `sndfile-info` from sndfile-programs is used
(exact package name may vary by distribution).


Copyright (C) 2011  Mikael Lammentausta

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
'

VERSION='1.0.0'

trap onexit 2 3 15

#--- onexit() -----------------------------------------------------
#  @param $1 integer  (optional) Exit status.  If not set, use `$?'
function onexit() {
    local exit_status=${1:-$?}
    echo Exiting $0 with $exit_status
    exit $exit_status
}
function die {
        echo "ERROR: $1"
        exit 1
}
function usage {
	cat << __USAGE
SBEOK $VERSION
Checks whether a wav file fills audio cd sectors.

USAGE
	sbeok [files(s) ...]

When burning an audio cd where the audio is continuous over a track change,
you need to ensure the proper length of each track to prevent small clicks.

On audio cd, tracks begin at full sectors. The Red Book audio cd specification
defines a sector length of 1/75 sec. If the audio data does not fill up,
the cd burner will insert silence to fill out the sector. This is enough 
to cause an annoying click in some cd players, which is called a 
sector boundary error (SBE). A single audio sector is 2352 bytes.

Give a list of .wav files as a parameter to check if it properly fills to sector boundary.
__USAGE
}

[[ -n $* ]] || (usage; echo; die "no input file(s)")

debug=0

which sndfile-info >/dev/null
[[ $? == 0 ]] || die "sndfile-programs not installed"

# since the input argument can be either a single wav file or 
# "*.wav", which will be exploded in the shell to filenames,
# so to properly handle them IFS is temporarily altered..
_IFS=$IFS
IFS=$(echo -en "\n\b")

for filename in ${@}; do
	echo -n ${filename}

	track_length=$(\
		sndfile-info "${filename}" |\
			awk -F' : ' '/^data/{print $2}')
	
	if [ -z $track_length ]; then
		echo ': ERROR'
		continue
	fi
	remainder=$(expr $track_length % 2352)

	# if remainder == 0, file is OK
	if [ $remainder != 0 ]; then
		echo ": FAILED"
	else
		echo ": OK"
	fi

	if [ $debug == 1 ]; then
		echo "Length: ${track_length}"
		echo "Remainder: $remainder"
	fi

done
IFS=_IFS

exit 0
